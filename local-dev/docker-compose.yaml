version: '3'
services:
  ccvs:
    container_name: ccvs
    environment:
      GOPATH: /go/
      DATABASE_URL: postgresql://username:password@ccvs_postgres:5432/ccvs_db?sslmode=disable
    build:
      context: ../
      dockerfile: local-dev/ccvs/Dockerfile
    command: sh -c "go run cmd/migration/main.go && go run cmd/api/main.go"
    ports:
      - "8040:8080"
    volumes:
        - "../:/go/src/github.com/edersonbrilhnte/ccvs"
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    networks:
      - ccvs_net
    depends_on:
      - postgres
      - anchore_engine
      - trivy
      - clair

  postgres:
    container_name: ccvs_postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: ccvs_db,clair_db,anchore_db
    build:
      context: ../
      dockerfile: local-dev/postgres/Dockerfile
    ports:
      - "5432"
    networks:
      - ccvs_net

  anchore_engine:
    container_name: anchore_engine
    command: anchore-manager service start --all
    environment:
      ANCHORE_HOST_ID: dockerhostid-anchore-engine
      ANCHORE_ENDPOINT_HOSTNAME: anchore-engine
      ANCHORE_DB_NAME: anchore_db
      ANCHORE_DB_HOST: ccvs_postgres
      ANCHORE_DB_USER: username
      ANCHORE_DB_PASSWORD: password
      ANCHORE_DB_PORT: 5432
      ANCHORE_ENDPOINT_HOSTNAME: localhost
      ANCHORE_ENDPOINT_PORT: 8228
      ANCHORE_MAX_COMPRESSED_IMAGE_SIZE_MB: 700
      ANCHORE_HINTS_ENABLED: "False"
    build:
      context: ../
      dockerfile: local-dev/anchore/Dockerfile
    ports:
      - "8041:8228"
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    networks:
      - ccvs_net
    depends_on:
      - postgres

  trivy:
    image: aquasec/trivy
    container_name: trivy
    command: "server --debug  --listen 0.0.0.0:8080"
    ports:
      - "8042:8080"
    networks:
      - ccvs_net

  clair:
    container_name: clair
    environment:
      CLAIR_CONF: /tmp/config.yaml
      CLAIR_MODE: combo
    build:
      context: ../
      dockerfile: local-dev/clair/Dockerfile
    ports:
      - "8043:6060"
    networks:
      - ccvs_net
    depends_on:
      - postgres

  adminer:
    container_name: db_adminer
    image: adminer
    ports:
      - "8044:8080"
    networks:
      - ccvs_net
    depends_on:
      - postgres

networks:
    ccvs_net:
    